"use strict";let days=0,productsAmount=0,retailersAmount=0,db={},tester=null;const getRandomInt=(t,e)=>(t=Math.ceil(t),e=Math.floor(e+1),Math.floor(Math.random()*(e-t))+t),getRandomArray=(t,e,r)=>{let s,i=[];for(;i.length<r;)s=getRandomInt(t,e),-1==i.indexOf(s)&&i.push(s);return i},readFile=t=>{let e=t.files[0],r=new FileReader;r.readAsText(e),r.onload=function(){db=JSON.parse(r.result)},r.onerror=function(){alert(console.log(r.error))}},clearUI=t=>{for(;t.firstChild;)t.firstChild.remove()},withSpan=t=>{const e=document.createElement("span");return e.innerText=t,e},addOptions=(t,e,r)=>{for(let s=e;s<=r;s++)t.append(withOption(s));t.value=r},withOption=t=>{const e=document.createElement("option");return e.value=t,e.text=t,e},withSelector=(t,e,r,s=-20,i=20)=>{const o=document.createElement("select");return addOptions(o,s,i),o.value=t,o.addEventListener("change",(t=>{e(r,+t.target.value)})),o},nextBtn=document.querySelector("#next"),resultsBtn=document.querySelector("#resultsBtn"),counter=document.querySelector(".counter"),getOrdersBtn=document.querySelector("#get-orders"),details=document.querySelector("#details"),experiment=document.querySelector("#experiment"),results=document.querySelector("#results"),warehouseList=document.querySelector("#warehouse-list"),warehouseTopList=["Код товара","Кол-во упаковок","Кол-во единиц в упаковке","Срок годности (дней) ","Закупочная цена за единицу (у.е)","Наценка с учетом уценки (%)","Цена за единицу (у.е)"],scrappedList=document.querySelector("#scrapped-list"),scrappedTopList=["Код товара","Кол-во единиц товара","Закупочная цена за единицу (у.е)","Общая стоимость"],ordersList=document.querySelector("#orders-list"),orderTopList=["Код товара","Торговая точка","Кол-во единиц товара"],departuresList=document.querySelector("#departures-list"),departuresTopList=["Код товара","Торговая точка","Кол-во упаковок","Цена за единицу (у.е)"],expectedList=document.querySelector("#expected-list"),expectedTopList=["Код товара","Кол-во упаковок"],providerOrders=document.querySelector("#provider-orders"),statList=document.querySelector("#stat-list"),statTopList=["Объем продаж: ","Чистая прибыль: ","Потери при списании: ","Итог: "],historyByDay=document.querySelector("#historyByDay"),historyResult=document.querySelector("#historyResult"),historyBlock=document.querySelector(".history__block"),historyTitle=document.querySelector(".history__title"),historyItem=document.querySelector(".history__item"),historyStat=document.querySelector(".history__stat"),historyWrapper=document.querySelector(".history__wrapper"),historyTopItem=["Код товара","Объем заявок единиц товара","Объем отгруженных единиц товара","Списано единиц товара","Общая прибыль","Чистая прибыль","Потери от списания"],currentDay=document.querySelector("#currentDay"),allDays=document.querySelector("#allDays"),form=document.querySelector("#form");addOptions(form.days,1,30),addOptions(form.productsAmount,12,18),addOptions(form.retailersAmount,1,9);const drawTable=(t,e,r,s)=>{clearUI(t);let i=document.createElement("li");i.classList.add("table__line","table__top"),e.map((t=>i.append(withSpan(t)))),s&&s.del&&(t.classList.add("table_del"),i.append(withSpan(""))),t.append(i),r.map(((t,e)=>{let r=document.createElement("li");r.classList.add("table__line","table__item");for(let i in t)"margin"==i&&s&&s.modify?r.append(withSelector(t[i],s.modify,e)):r.append(withSpan(t[i]));if(s&&s.del){const t=document.createElement("button");t.classList.add("btn","btn_del"),t.addEventListener("click",(()=>s.del(e))),r.append(t)}return r})).forEach((e=>t.append(e)))},updateShortUI=t=>{drawTable(ordersList,orderTopList,t.getOrderList()),drawTable(warehouseList,warehouseTopList,t.getProducts(),{modify:t.setMargin}),drawTable(scrappedList,scrappedTopList,t.getScrappedProducts()),drawTable(expectedList,expectedTopList,t.getExpectedDeliveries()),getOrdersBtn.classList.remove("hide"),nextBtn.classList.add("hide"),resultsBtn.classList.add("hide"),details.classList.add("hide")},updateUI=t=>{drawTable(ordersList,orderTopList,t.getOrderList()),drawTable(warehouseList,warehouseTopList,t.getProducts()),drawTable(scrappedList,scrappedTopList,t.getScrappedProducts()),drawTable(departuresList,departuresTopList,t.getDepartures(),{del:t.removeDepartureOrder}),drawTable(expectedList,expectedTopList,t.getExpectedDeliveries()),drawTable(statList,statTopList,t.getShortStat()),drawTable(providerOrders,expectedTopList,t.getProviderOrders(),{del:t.removeProviderOrder}),getOrdersBtn.classList.add("hide"),details.classList.remove("hide")},updateCounter=(t,e)=>{currentDay.innerText=t,allDays.innerText=e},drawHistory=(t,e)=>{clearUI(t),e.forEach((e=>{let r=historyBlock.cloneNode();const s=historyTitle.cloneNode();let i=historyItem.cloneNode(),o=historyStat.cloneNode(),d=historyWrapper.cloneNode();e.day&&(s.innerText=`День ${e.day}`),drawTable(i,historyTopItem,e.stat),drawTable(o,statTopList,e.short),d.append(i),d.append(o),r.append(s),r.append(d),t.append(r)}))};function Order(t,e){this.id=t,this.amount=e}class Provider{#t=[];newOrder=t=>{this.#t=[...this.#t,{order:t,leadTime:getRandomInt(1,5)}]};sendOrder=t=>{this.#t=this.#t.map((t=>({...t,leadTime:t.leadTime-1})));const e=this.#t.filter((t=>0==t.leadTime));this.#t=this.#t.filter((t=>t.leadTime>0)),e.map((e=>t.acceptOrder(e.order)))}}class Retailer{#e;#r;constructor({provider:t,id:e}){this.#e=t,this.#r=e}getId=()=>this.#r;makeOrder=t=>{this.#e.newOrder(this,t)}}function StatisticItem(t){this.id=t,this.orderAmount=0,this.departuresAmount=0,this.lossesAmount=0,this.totalCost=0,this.profitCost=0,this.totalLosses=0}class Store{#s;#i;#e;#o;#d;#a;#n;#t;#c;#u;#p;#l;constructor(t,e){this.#s=t.products,this.#i=t.config,this.#e=e,this.#d=t.initialStore.map((t=>{let{initialPrice:e,pack:r}=this.#s[t.id-201];return{id:t.id,amount:t.amount,pack:r,expiryDate:t.expiryDate,initialPrice:e,margin:t.margin,price:Math.round(e*(1+t.margin/100))}})),this.#t=[],this.#c=[],this.#l=[],this.#u=[],this.#p=[],this.#a=this.#d,this.#n=this.#t,this.#o=this.#s.map((t=>new StatisticItem(t.id)))}acceptOrder=t=>{const{id:e,initialPrice:r,expiryDate:s,margin:i,pack:o}=this.#s[t.id-201];this.#d=[...this.#d,{id:e,amount:t.amount,pack:o,expiryDate:s,initialPrice:r,margin:i,price:Math.round(r*(1+i/100))}],this.#u=this.#u.map((r=>r.id==e?{...r,amount:r.amount-t.amount}:r)).filter((t=>t.amount>0))};newOrder=(t,e)=>{this.#t=[...this.#t,{retailer:t,order:e}]};#h=()=>{this.#o=this.#s.map((t=>new StatisticItem(t.id))),this.#n.map((t=>t.order.map((({id:t,amount:e})=>{let r=this.#o[t-201];r.orderAmount=r.orderAmount+e})))),this.#c.map((({id:t,amount:e,price:r})=>{let s=this.#o[t-201];s.departuresAmount=s.departuresAmount+e*this.#s[t-201].pack,s.totalCost=s.totalCost+r*e*this.#s[t-201].pack,s.profitCost=s.profitCost+(r-this.#s[t-201].initialPrice)*e*this.#s[t-201].pack})),this.#l.map((({id:t,amount:e,sum:r})=>{let s=this.#o[t-201];s.totalLosses=s.totalLosses+r,s.lossesAmount=s.lossesAmount+e*this.#s[t-201].pack}))};#m=()=>{this.#d=this.#d.map((t=>({...t,expiryDate:t.expiryDate-1})))};#y=()=>{this.#l=this.#d.filter((t=>0==t.expiryDate)).map((({id:t,amount:e,initialPrice:r,pack:s})=>({id:t,amount:e,initialPrice:r,sum:s*e*r}))),this.#d=this.#d.filter((t=>t.expiryDate>0))};#L=()=>{this.#d=this.#d.map((t=>{if(t.expiryDate<3){let{initialPrice:e}=this.#s[t.id-201],r=10*t.expiryDate-10;return{...t,margin:r,price:Math.round(e*(1+r/100))}}return t}))};#g=t=>this.#d.map(((e,r)=>{if(e.id==t)return{item:e,index:r}})).filter((t=>null!=t));#f=()=>{this.#d.sort(((t,e)=>t.id<e.id?-1:t.id==e.id?t.expiryDate-e.expiryDate:1))};#v=t=>t.reduce(((t,e)=>[...t,...e.order.map((t=>({id:t.id,retailer:e.retailer.getId(),amount:t.amount})))]),[]);#S=t=>this.#g(t).reduce(((t,{amount:e})=>t+e),0);#x=()=>{this.#i.map((({id:t,min:e,limit:r})=>{const s=e-this.#S(t),i=this.#O(t);if(s>0){const e=Math.min(s,r-i);e>0&&(this.#p=[...this.#p,new Order(t,e)])}}))};#D=()=>{let t;this.#p.forEach((e=>{this.#e.newOrder(e),t=this.#O(e.id),this.#u=[...this.#u.filter((t=>t.id!=e.id)),{id:e.id,amount:t+e.amount}]}))};#O=t=>{const e=this.#u.find((e=>e.id==t));return null==e?0:e.amount};#w=(t,e)=>t.filter(((t,r)=>e!=r));#T=(t,e)=>{const{id:r,amount:s}=t;let i=Math.max(Math.round(s/this.#s[r-201].pack),1);this.#d=this.#d.map(((s,o)=>{if(s.id==r&&i>0&&s.amount>0){if(i>=s.amount)return this.#c=[...this.#c,{id:t.id,retailer:e,amount:s.amount,price:s.price,from:o}],i-=s.amount,{...s,amount:0};{this.#c=[...this.#c,{id:t.id,retailer:e,amount:i,price:s.price,from:o}];let r=s.amount-i;return i=0,{...s,amount:r}}}return s}))};newDay=()=>{this.#d=this.#d.filter((t=>t.amount>0)),this.#f(),this.#y(),this.#D(),this.#p=[],this.#a=this.#d,this.#t=[],updateShortUI(this)};processOrders=()=>{this.#n=this.#t,this.#c=[],this.#o=db.products.map((t=>new StatisticItem(t.id))),this.#t.map((t=>{t.order.map((e=>{this.#T(e,t.retailer.getId())}))})),this.#m(),this.#h(),this.#L(),this.#x(),this.#t=[],updateUI(this)};acceptOrder=t=>{const{id:e,initialPrice:r,expiryDate:s,margin:i,pack:o}=this.#s[t.id-201];this.#d=[...this.#d,{id:e,amount:t.amount,pack:o,expiryDate:s,initialPrice:r,margin:i,price:Math.round(r*(1+i/100))}],this.#u=this.#u.map((r=>r.id==e?{...r,amount:r.amount-t.amount}:r)).filter((t=>t.amount>0))};newOrder=(t,e)=>{this.#t=[...this.#t,{retailer:t,order:e}]};removeProviderOrder=t=>{this.#p=this.#w(this.#p,t),updateUI(this)};removeDepartureOrder=t=>{const{from:e,amount:r}=this.#c[t];this.#d[e]={...this.#d[e],amount:this.#d[e].amount+r},this.#c=this.#w(this.#c,t),this.#h(),updateUI(this)};setMargin=(t,e)=>{this.#a[t]={...this.#a[t],margin:e,price:Math.round(this.#a[t].initialPrice*(1+e/100))},this.#d[t]={...this.#d[t],margin:e,price:Math.round(this.#d[t].initialPrice*(1+e/100))},updateShortUI(this)};getStatistic=()=>this.#o;getShortStat=()=>{const t=this.#o.reduce(((t,{profitCost:e})=>t+e),0),e=this.#o.reduce(((t,{totalLosses:e})=>t+e),0);return[{volume:this.#o.reduce(((t,{totalCost:e})=>t+e),0),profit:t,losses:e,result:t-e}]};getProducts=()=>this.#a;getScrappedProducts=()=>this.#l;getOrderList=()=>this.#v(this.#n);getDepartures=()=>this.#c.map((({id:t,retailer:e,amount:r,price:s})=>({id:t,retailer:e,amount:r,price:s})));getProviderOrders=()=>this.#p;getExpectedDeliveries=()=>this.#u.sort(((t,e)=>t.id-e.id))}class Tester{#A;#e;#P;#B;#b;#I;#E;#k;#q;#_;constructor(t,e,r,s){const i={products:t.products.filter((t=>t.id<=200+s)).sort(((t,e)=>t.id-e.id)),config:t.config.filter((t=>t.id<=200+s)),initialStore:t.initialStore.filter((t=>t.id<=200+s))};this.#b=i,this.#e=new Provider,this.#A=new Store(this.#b,this.#e),this.#I=e,this.#E=r,this.#k=s,this.#B=0,this.#q=[],this.#_={stat:i.products.map((t=>new StatisticItem(t.id))),short:[{volume:0,profit:0,losses:0,result:0}]},this.#P=new Array(r).fill(0).map(((t,e)=>new Retailer({provider:this.#A,id:101+e}))),nextBtn.classList.remove("hide"),this.nextStep()}#C=()=>{getRandomArray(0,this.#E-1,getRandomInt(1,this.#E)).forEach((t=>{const e=getRandomArray(201,200+this.#k,getRandomInt(1,this.#k)).map((t=>new Order(t,getRandomInt(10,300))));this.#P[t].makeOrder(e)}))};nextStep=()=>{this.#B>0&&this.updateHistory(),this.#e.sendOrder(this.#A),this.#A.newDay(),this.#B=this.#B+1,updateCounter(this.#B,this.#I)};makeOrders=()=>{this.#C(),this.#A.processOrders(),nextBtn.classList.remove("hide"),this.#B==this.#I&&(nextBtn.classList.add("hide"),resultsBtn.classList.remove("hide"))};updateHistory=()=>{this.#q=[...this.#q,{day:this.#B,stat:this.#A.getStatistic(),short:this.#A.getShortStat()}]};calcResult=()=>{this.#q.forEach((({stat:t,short:e})=>{t.forEach((t=>{const{id:e,orderAmount:r,departuresAmount:s,lossesAmount:i,totalCost:o,profitCost:d,totalLosses:a}=this.#_.stat[t.id-201];this.#_.stat[t.id-201]={id:e,orderAmount:r+t.orderAmount,departuresAmount:s+t.departuresAmount,lossesAmount:i+t.lossesAmount,totalCost:o+t.totalCost,profitCost:d+t.profitCost,totalLosses:a+t.totalLosses}})),e.forEach((t=>{const{volume:e,profit:r,losses:s,result:i}=this.#_.short[0];this.#_.short=[{volume:e+t.volume,profit:r+t.profit,losses:s+t.losses,result:i+t.result}]}))}))};getCurrentDay=()=>this.#B;getHistory=()=>this.#q;getResult=()=>[this.#_]}nextBtn.classList.add("hide"),nextBtn.addEventListener("click",(()=>{tester.nextStep()})),form.config.addEventListener("change",(t=>readFile(t.target))),form.addEventListener("submit",(t=>{t.preventDefault(),results.classList.add("hide"),resultsBtn.classList.add("hide"),experiment.classList.remove("hide"),days=+form.days.value,productsAmount=+form.productsAmount.value,retailersAmount=+form.retailersAmount.value,tester=new Tester(db,days,retailersAmount,productsAmount)})),getOrdersBtn.addEventListener("click",(()=>{tester.makeOrders()})),resultsBtn.addEventListener("click",(()=>{experiment.classList.add("hide"),results.classList.remove("hide"),tester.updateHistory(),tester.calcResult(),drawHistory(historyResult,tester.getResult()),drawHistory(historyByDay,tester.getHistory())}));